apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.frogermcs.androiddevmetrics'

buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.6.1'
        classpath 'com.frogermcs.androiddevmetrics:androiddevmetrics-plugin:0.3.1'
        classpath "io.realm:realm-gradle-plugin:2.2.1"
    }
}

android {

    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "io.github.plastix.forage"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "0.7"

        // Enable VectorDrawableCompat for API <21
        vectorDrawables.useSupportLibrary = true

        // Custom instrumentation runner to change the application class
        testInstrumentationRunner "io.github.plastix.forage.ForageFunctionalTestRunner"

        //noinspection GroovyAssignabilityCheck
        buildConfigField("String", "OKAPI_US_CONSUMER_KEY", "\"" + OKAPI_US_CONSUMER_KEY + "\"")
        //noinspection GroovyAssignabilityCheck
        buildConfigField("String", "OKAPI_US_CONSUMER_SECRET", "\"" + OKAPI_US_CONSUMER_SECRET + "\"")

        // Use res value so we can access the Google API key in the AndroidManifest.xml
        //noinspection GroovyAssignabilityCheck
        resValue("string", "GOOGLE_MAPS_API_KEY", "\"" + GOOGLE_MAPS_API_KEY + "\"")

    }

    signingConfigs {
        release
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        release {
            applicationIdSuffix '.release'
            signingConfig signingConfigs.release

            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        // Unit tests live in src/unitTest.
        test.java.srcDir 'src/unitTests/java'

        // Integration tests live in src/integrationTest.
        test.java.srcDir 'src/integrationTests/java'

        // Unit tests for debug build type specific code live in src/debugUnitTest.
        testDebug.java.srcDir 'src/debugUnitTests/java'

        // Unit tests for release build type specific code live in src/releaseUnitTest.
        testRelease.java.srcDir 'src/releaseUnitTests/java'

        // Functional tests live in src/androidTest/java.
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        disable 'InvalidPackage'
        disable 'GoogleAppIndexingWarning' // App does not have deep linking.
        disable 'UseCompoundDrawables'
        // Support library dropped support for Compound Drawable vectors
        disable 'UnusedAttribute'

        warningsAsErrors false
        abortOnError true // Fail early.
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
    }

}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "https://clojars.org/repo/"
    }
    jcenter()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Google Support Library
    compile 'com.android.support:support-compat:25.1.0'
    compile 'com.android.support:support-fragment:25.1.0'
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:design:25.1.0'
    compile 'com.android.support:recyclerview-v7:25.1.0'
    compile 'com.android.support:gridlayout-v7:25.1.0'
    compile 'com.android.support:customtabs:25.1.0'

    // Google Play Services
    compile 'com.google.android.gms:play-services-location:10.0.1'
    compile 'com.google.android.gms:play-services-maps:10.0.1'

    // RxJava
    compile 'io.reactivex:rxjava:1.2.0'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.github.Plastix.RxDelay:rx1:0.5.1'

    // Retrofit
    compile 'com.squareup.retrofit2:retrofit:2.0.0'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'

    // Dagger 2
    annotationProcessor 'com.google.dagger:dagger-compiler:2.6'
    compile 'com.google.dagger:dagger:2.6'

    // LeakCanary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4'

    // Ice Pick
    compile 'frankiesardo:icepick:3.2.0'
    provided 'frankiesardo:icepick-processor:3.2.0'

    // Other Third Party Libraries
    compile 'com.jakewharton:butterknife:8.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.1.0'
    compile 'se.akerfeldt:okhttp-signpost:1.1.0'
    compile 'oauth.signpost:signpost-core:1.2.1.2'
    compile 'io.realm:android-adapters:1.3.0'
    compile 'com.afollestad.material-dialogs:core:0.8.5.9'
    compile 'com.jakewharton.timber:timber:4.1.2'

    // Unit Testing
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'com.google.truth:truth:0.28'
    testCompile 'org.robolectric:robolectric:3.1'
    testCompile 'org.powermock:powermock-api-mockito:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.2'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.2'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.2.0'
    testCompile 'com.github.Plastix.RxSchedulerRule:rx1:1.0.1'

    // Custom Retrolambda version
    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:2.3.0'

    // Functional UI Testing
    androidTestCompile 'com.squareup.okhttp3:mockwebserver:3.2.0'
    androidTestCompile 'com.android.support:support-annotations:25.1.0'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.1') {
        // Fix dependency error
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'
    }
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'

}

// Signing Config code
// From https://gist.github.com/gabrielemariotti/6856974
def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
